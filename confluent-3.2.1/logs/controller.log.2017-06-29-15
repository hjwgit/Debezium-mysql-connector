[2017-06-29 15:04:53,045] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-29 15:04:53,046] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([replicated-topic,0] -> List(1, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__confluent.support.metrics,0] -> List(0), [dbserver1.kafka.kafkatable,0] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [testforavro,0] -> List(0), [__consumer_offsets,29] -> List(0), [test-mysql-tmst2-tmst,0] -> List(0), [test-hjw-tmst,0] -> List(0), [__consumer_offsets,41] -> List(0), [dbserver1.kafka.User,0] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,10] -> List(0), [user-detect2-user,0] -> List(0), [__consumer_offsets,14] -> List(0), [test-mysql-jdbc-tmst,0] -> List(0), [__consumer_offsets,40] -> List(0), [modification-user,0] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [test-tmstonly-tmst,0] -> List(0), [dbserver1,0] -> List(0), [test-mysql-tmst-tmst,0] -> List(0), [__consumer_offsets,20] -> List(0), [list,0] -> List(0), [__consumer_offsets,3] -> List(0), [connect-statuses,0] -> List(0), [__consumer_offsets,21] -> List(0), [dbserver1.kafka.Device,0] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [test-mysql-jdbc-testtable,0] -> List(0), [test-mysql-jdbc-kafkatable,0] -> List(0), [user-detect-test-user,0] -> List(0), [dbserver1.kafka.user,0] -> List(0), [connect-offsets,0] -> List(0), [__consumer_offsets,12] -> List(0), [modification-device,0] -> List(0), [__consumer_offsets,8] -> List(0), [dbserver1.kafka.Products,0] -> List(0), [test-mysql-timestamp-tmst,0] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [dbhistory.kafka,0] -> List(0), [test-tt-tmst,0] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,37] -> List(0), [_schemas,0] -> List(0), [topicA,0] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [dbhistory.inventory,0] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [dbserver1.kafka.tmst,0] -> List(0), [__consumer_offsets,43] -> List(0), [connect-configs,0] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [test-topic-tmst,0] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [user-detect-user,0] -> List(0), [dbhistory.debetopic,0] -> List(0), [dbserver1.kafka.testtable,0] -> List(0), [dbserver1.kafka.device,0] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2017-06-29 15:04:53,046] DEBUG [Controller 0]: topics not in preferred replica Map([replicated-topic,0] -> List(1, 0)) (kafka.controller.KafkaController)
[2017-06-29 15:04:53,046] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2017-06-29 15:04:53,046] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-29 15:04:53,046] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-29 15:09:53,045] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-29 15:09:53,046] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([replicated-topic,0] -> List(1, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__confluent.support.metrics,0] -> List(0), [dbserver1.kafka.kafkatable,0] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [testforavro,0] -> List(0), [__consumer_offsets,29] -> List(0), [test-mysql-tmst2-tmst,0] -> List(0), [test-hjw-tmst,0] -> List(0), [__consumer_offsets,41] -> List(0), [dbserver1.kafka.User,0] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,10] -> List(0), [user-detect2-user,0] -> List(0), [__consumer_offsets,14] -> List(0), [test-mysql-jdbc-tmst,0] -> List(0), [__consumer_offsets,40] -> List(0), [modification-user,0] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [test-tmstonly-tmst,0] -> List(0), [dbserver1,0] -> List(0), [test-mysql-tmst-tmst,0] -> List(0), [__consumer_offsets,20] -> List(0), [list,0] -> List(0), [__consumer_offsets,3] -> List(0), [connect-statuses,0] -> List(0), [__consumer_offsets,21] -> List(0), [dbserver1.kafka.Device,0] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [test-mysql-jdbc-testtable,0] -> List(0), [test-mysql-jdbc-kafkatable,0] -> List(0), [user-detect-test-user,0] -> List(0), [dbserver1.kafka.user,0] -> List(0), [connect-offsets,0] -> List(0), [__consumer_offsets,12] -> List(0), [modification-device,0] -> List(0), [__consumer_offsets,8] -> List(0), [dbserver1.kafka.Products,0] -> List(0), [test-mysql-timestamp-tmst,0] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [dbhistory.kafka,0] -> List(0), [test-tt-tmst,0] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,37] -> List(0), [_schemas,0] -> List(0), [topicA,0] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [dbhistory.inventory,0] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [dbserver1.kafka.tmst,0] -> List(0), [__consumer_offsets,43] -> List(0), [connect-configs,0] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [test-topic-tmst,0] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [user-detect-user,0] -> List(0), [dbhistory.debetopic,0] -> List(0), [dbserver1.kafka.testtable,0] -> List(0), [dbserver1.kafka.device,0] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2017-06-29 15:09:53,046] DEBUG [Controller 0]: topics not in preferred replica Map([replicated-topic,0] -> List(1, 0)) (kafka.controller.KafkaController)
[2017-06-29 15:09:53,047] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2017-06-29 15:09:53,047] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-29 15:09:53,047] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-29 15:14:53,045] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-29 15:14:53,047] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([replicated-topic,0] -> List(1, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__confluent.support.metrics,0] -> List(0), [dbserver1.kafka.kafkatable,0] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [testforavro,0] -> List(0), [__consumer_offsets,29] -> List(0), [test-mysql-tmst2-tmst,0] -> List(0), [test-hjw-tmst,0] -> List(0), [__consumer_offsets,41] -> List(0), [dbserver1.kafka.User,0] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,10] -> List(0), [user-detect2-user,0] -> List(0), [__consumer_offsets,14] -> List(0), [test-mysql-jdbc-tmst,0] -> List(0), [__consumer_offsets,40] -> List(0), [modification-user,0] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [test-tmstonly-tmst,0] -> List(0), [dbserver1,0] -> List(0), [test-mysql-tmst-tmst,0] -> List(0), [__consumer_offsets,20] -> List(0), [list,0] -> List(0), [__consumer_offsets,3] -> List(0), [connect-statuses,0] -> List(0), [__consumer_offsets,21] -> List(0), [dbserver1.kafka.Device,0] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [test-mysql-jdbc-testtable,0] -> List(0), [test-mysql-jdbc-kafkatable,0] -> List(0), [user-detect-test-user,0] -> List(0), [dbserver1.kafka.user,0] -> List(0), [connect-offsets,0] -> List(0), [__consumer_offsets,12] -> List(0), [modification-device,0] -> List(0), [__consumer_offsets,8] -> List(0), [dbserver1.kafka.Products,0] -> List(0), [test-mysql-timestamp-tmst,0] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [dbhistory.kafka,0] -> List(0), [test-tt-tmst,0] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,37] -> List(0), [_schemas,0] -> List(0), [topicA,0] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [dbhistory.inventory,0] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [dbserver1.kafka.tmst,0] -> List(0), [__consumer_offsets,43] -> List(0), [connect-configs,0] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [test-topic-tmst,0] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [user-detect-user,0] -> List(0), [dbhistory.debetopic,0] -> List(0), [dbserver1.kafka.testtable,0] -> List(0), [dbserver1.kafka.device,0] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2017-06-29 15:14:53,047] DEBUG [Controller 0]: topics not in preferred replica Map([replicated-topic,0] -> List(1, 0)) (kafka.controller.KafkaController)
[2017-06-29 15:14:53,047] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2017-06-29 15:14:53,047] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-29 15:14:53,047] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-29 15:19:53,045] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-29 15:19:53,046] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([replicated-topic,0] -> List(1, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__confluent.support.metrics,0] -> List(0), [dbserver1.kafka.kafkatable,0] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [testforavro,0] -> List(0), [__consumer_offsets,29] -> List(0), [test-mysql-tmst2-tmst,0] -> List(0), [test-hjw-tmst,0] -> List(0), [__consumer_offsets,41] -> List(0), [dbserver1.kafka.User,0] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,10] -> List(0), [user-detect2-user,0] -> List(0), [__consumer_offsets,14] -> List(0), [test-mysql-jdbc-tmst,0] -> List(0), [__consumer_offsets,40] -> List(0), [modification-user,0] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [test-tmstonly-tmst,0] -> List(0), [dbserver1,0] -> List(0), [test-mysql-tmst-tmst,0] -> List(0), [__consumer_offsets,20] -> List(0), [list,0] -> List(0), [__consumer_offsets,3] -> List(0), [connect-statuses,0] -> List(0), [__consumer_offsets,21] -> List(0), [dbserver1.kafka.Device,0] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [test-mysql-jdbc-testtable,0] -> List(0), [test-mysql-jdbc-kafkatable,0] -> List(0), [user-detect-test-user,0] -> List(0), [dbserver1.kafka.user,0] -> List(0), [connect-offsets,0] -> List(0), [__consumer_offsets,12] -> List(0), [modification-device,0] -> List(0), [__consumer_offsets,8] -> List(0), [dbserver1.kafka.Products,0] -> List(0), [test-mysql-timestamp-tmst,0] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [dbhistory.kafka,0] -> List(0), [test-tt-tmst,0] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,37] -> List(0), [_schemas,0] -> List(0), [topicA,0] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [dbhistory.inventory,0] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [dbserver1.kafka.tmst,0] -> List(0), [__consumer_offsets,43] -> List(0), [connect-configs,0] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [test-topic-tmst,0] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [user-detect-user,0] -> List(0), [dbhistory.debetopic,0] -> List(0), [dbserver1.kafka.testtable,0] -> List(0), [dbserver1.kafka.device,0] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2017-06-29 15:19:53,046] DEBUG [Controller 0]: topics not in preferred replica Map([replicated-topic,0] -> List(1, 0)) (kafka.controller.KafkaController)
[2017-06-29 15:19:53,046] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2017-06-29 15:19:53,046] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-29 15:19:53,046] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-29 15:24:53,045] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-29 15:24:53,046] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([replicated-topic,0] -> List(1, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__confluent.support.metrics,0] -> List(0), [dbserver1.kafka.kafkatable,0] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [testforavro,0] -> List(0), [__consumer_offsets,29] -> List(0), [test-mysql-tmst2-tmst,0] -> List(0), [test-hjw-tmst,0] -> List(0), [__consumer_offsets,41] -> List(0), [dbserver1.kafka.User,0] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,10] -> List(0), [user-detect2-user,0] -> List(0), [__consumer_offsets,14] -> List(0), [test-mysql-jdbc-tmst,0] -> List(0), [__consumer_offsets,40] -> List(0), [modification-user,0] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [test-tmstonly-tmst,0] -> List(0), [dbserver1,0] -> List(0), [test-mysql-tmst-tmst,0] -> List(0), [__consumer_offsets,20] -> List(0), [list,0] -> List(0), [__consumer_offsets,3] -> List(0), [connect-statuses,0] -> List(0), [__consumer_offsets,21] -> List(0), [dbserver1.kafka.Device,0] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [test-mysql-jdbc-testtable,0] -> List(0), [test-mysql-jdbc-kafkatable,0] -> List(0), [user-detect-test-user,0] -> List(0), [dbserver1.kafka.user,0] -> List(0), [connect-offsets,0] -> List(0), [__consumer_offsets,12] -> List(0), [modification-device,0] -> List(0), [__consumer_offsets,8] -> List(0), [dbserver1.kafka.Products,0] -> List(0), [test-mysql-timestamp-tmst,0] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [dbhistory.kafka,0] -> List(0), [test-tt-tmst,0] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,37] -> List(0), [_schemas,0] -> List(0), [topicA,0] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [dbhistory.inventory,0] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [dbserver1.kafka.tmst,0] -> List(0), [__consumer_offsets,43] -> List(0), [connect-configs,0] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [test-topic-tmst,0] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [user-detect-user,0] -> List(0), [dbhistory.debetopic,0] -> List(0), [dbserver1.kafka.testtable,0] -> List(0), [dbserver1.kafka.device,0] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2017-06-29 15:24:53,046] DEBUG [Controller 0]: topics not in preferred replica Map([replicated-topic,0] -> List(1, 0)) (kafka.controller.KafkaController)
[2017-06-29 15:24:53,046] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2017-06-29 15:24:53,046] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-29 15:24:53,046] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-29 15:29:53,045] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-29 15:29:53,046] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([replicated-topic,0] -> List(1, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__confluent.support.metrics,0] -> List(0), [dbserver1.kafka.kafkatable,0] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [testforavro,0] -> List(0), [__consumer_offsets,29] -> List(0), [test-mysql-tmst2-tmst,0] -> List(0), [test-hjw-tmst,0] -> List(0), [__consumer_offsets,41] -> List(0), [dbserver1.kafka.User,0] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,17] -> List(0), [__consumer_offsets,10] -> List(0), [user-detect2-user,0] -> List(0), [__consumer_offsets,14] -> List(0), [test-mysql-jdbc-tmst,0] -> List(0), [__consumer_offsets,40] -> List(0), [modification-user,0] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [test-tmstonly-tmst,0] -> List(0), [dbserver1,0] -> List(0), [test-mysql-tmst-tmst,0] -> List(0), [__consumer_offsets,20] -> List(0), [list,0] -> List(0), [__consumer_offsets,3] -> List(0), [connect-statuses,0] -> List(0), [__consumer_offsets,21] -> List(0), [dbserver1.kafka.Device,0] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [test-mysql-jdbc-testtable,0] -> List(0), [test-mysql-jdbc-kafkatable,0] -> List(0), [user-detect-test-user,0] -> List(0), [dbserver1.kafka.user,0] -> List(0), [connect-offsets,0] -> List(0), [__consumer_offsets,12] -> List(0), [modification-device,0] -> List(0), [__consumer_offsets,8] -> List(0), [dbserver1.kafka.Products,0] -> List(0), [test-mysql-timestamp-tmst,0] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,13] -> List(0), [dbhistory.kafka,0] -> List(0), [test-tt-tmst,0] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,37] -> List(0), [_schemas,0] -> List(0), [topicA,0] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [dbhistory.inventory,0] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,45] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,32] -> List(0), [dbserver1.kafka.tmst,0] -> List(0), [__consumer_offsets,43] -> List(0), [connect-configs,0] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [test-topic-tmst,0] -> List(0), [__consumer_offsets,7] -> List(0), [test,0] -> List(0), [__consumer_offsets,9] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,1] -> List(0), [user-detect-user,0] -> List(0), [dbhistory.debetopic,0] -> List(0), [dbserver1.kafka.testtable,0] -> List(0), [dbserver1.kafka.device,0] -> List(0), [__consumer_offsets,16] -> List(0), [__consumer_offsets,2] -> List(0))) (kafka.controller.KafkaController)
[2017-06-29 15:29:53,046] DEBUG [Controller 0]: topics not in preferred replica Map([replicated-topic,0] -> List(1, 0)) (kafka.controller.KafkaController)
[2017-06-29 15:29:53,046] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2017-06-29 15:29:53,046] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-29 15:29:53,046] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-29 15:31:05,856] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children dbserver1.kafka.User,test-mysql-timestamp-tmst,connect-configs,dbhistory.kafka,dbserver1.kafka.Ggroup,test-mysql-tmst-tmst,connect-offsets,test-tmstonly-tmst,modification-device,test-tt-tmst,user-detect-user,dbserver1.kafka.user,test-mysql-jdbc-kafkatable,testforavro,test-topic-tmst,dbhistory.inventory,dbserver1.kafka.Device,test-hjw-tmst,dbserver1.kafka.tmst,dbserver1.kafka.kafkatable,replicated-topic,dbserver1,dbserver1.kafka.testtable,test,_schemas,dbserver1.kafka.device,test-mysql-tmst2-tmst,test-mysql-jdbc-testtable,test-mysql-jdbc-tmst,list,dbserver1.kafka.Products,topicA,modification-user,user-detect-test-user,connect-statuses,dbhistory.debetopic,user-detect2-user,__consumer_offsets,__confluent.support.metrics (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:31:05,859] INFO [TopicChangeListener on Controller 0]: New topics: [Set(dbserver1.kafka.Ggroup)], deleted topics: [Set()], new partition replica assignment [Map([dbserver1.kafka.Ggroup,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:31:05,859] INFO [Controller 0]: New topic creation callback for [dbserver1.kafka.Ggroup,0] (kafka.controller.KafkaController)
[2017-06-29 15:31:05,860] INFO [Controller 0]: New partition creation callback for [dbserver1.kafka.Ggroup,0] (kafka.controller.KafkaController)
[2017-06-29 15:31:05,860] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [dbserver1.kafka.Ggroup,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:31:05,861] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=dbserver1.kafka.Ggroup,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:31:05,862] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [dbserver1.kafka.Ggroup,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:31:05,862] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [dbserver1.kafka.Ggroup,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:31:05,862] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [dbserver1.kafka.Ggroup,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:15) (kafka.controller.PartitionStateMachine)
[2017-06-29 15:31:05,904] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=dbserver1.kafka.Ggroup,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:31:05,905] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to cloud-C:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-06-29 15:34:53,045] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-29 15:34:53,046] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([replicated-topic,0] -> List(1, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__confluent.support.metrics,0] -> List(0), [dbserver1.kafka.kafkatable,0] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [testforavro,0] -> List(0), [__consumer_offsets,29] -> List(0), [test-mysql-tmst2-tmst,0] -> List(0), [test-hjw-tmst,0] -> List(0), [__consumer_offsets,41] -> List(0), [dbserver1.kafka.User,0] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [user-detect2-user,0] -> List(0), [__consumer_offsets,14] -> List(0), [test-mysql-jdbc-tmst,0] -> List(0), [__consumer_offsets,40] -> List(0), [modification-user,0] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [test-tmstonly-tmst,0] -> List(0), [dbserver1,0] -> List(0), [test-mysql-tmst-tmst,0] -> List(0), [__consumer_offsets,20] -> List(0), [list,0] -> List(0), [__consumer_offsets,3] -> List(0), [connect-statuses,0] -> List(0), [__consumer_offsets,21] -> List(0), [dbserver1.kafka.Device,0] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [test-mysql-jdbc-testtable,0] -> List(0), [test-mysql-jdbc-kafkatable,0] -> List(0), [user-detect-test-user,0] -> List(0), [dbserver1.kafka.user,0] -> List(0), [connect-offsets,0] -> List(0), [__consumer_offsets,12] -> List(0), [modification-device,0] -> List(0), [__consumer_offsets,8] -> List(0), [dbserver1.kafka.Products,0] -> List(0), [test-mysql-timestamp-tmst,0] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [dbhistory.kafka,0] -> List(0), [test-tt-tmst,0] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [topicA,0] -> List(0), [_schemas,0] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [dbhistory.inventory,0] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [dbserver1.kafka.Ggroup,0] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,45] -> List(0), [dbserver1.kafka.tmst,0] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [connect-configs,0] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test-topic-tmst,0] -> List(0), [test,0] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,9] -> List(0), [dbhistory.debetopic,0] -> List(0), [user-detect-user,0] -> List(0), [__consumer_offsets,1] -> List(0), [dbserver1.kafka.testtable,0] -> List(0), [dbserver1.kafka.device,0] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-29 15:34:53,047] DEBUG [Controller 0]: topics not in preferred replica Map([replicated-topic,0] -> List(1, 0)) (kafka.controller.KafkaController)
[2017-06-29 15:34:53,047] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2017-06-29 15:34:53,047] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-29 15:34:53,047] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-29 15:39:53,045] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-29 15:39:53,046] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([replicated-topic,0] -> List(1, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__confluent.support.metrics,0] -> List(0), [dbserver1.kafka.kafkatable,0] -> List(0), [__consumer_offsets,30] -> List(0), [__consumer_offsets,47] -> List(0), [testforavro,0] -> List(0), [__consumer_offsets,29] -> List(0), [test-mysql-tmst2-tmst,0] -> List(0), [test-hjw-tmst,0] -> List(0), [__consumer_offsets,41] -> List(0), [dbserver1.kafka.User,0] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [user-detect2-user,0] -> List(0), [__consumer_offsets,14] -> List(0), [test-mysql-jdbc-tmst,0] -> List(0), [__consumer_offsets,40] -> List(0), [modification-user,0] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [test-tmstonly-tmst,0] -> List(0), [dbserver1,0] -> List(0), [test-mysql-tmst-tmst,0] -> List(0), [__consumer_offsets,20] -> List(0), [list,0] -> List(0), [__consumer_offsets,3] -> List(0), [connect-statuses,0] -> List(0), [__consumer_offsets,21] -> List(0), [dbserver1.kafka.Device,0] -> List(0), [__consumer_offsets,22] -> List(0), [__consumer_offsets,5] -> List(0), [test-mysql-jdbc-testtable,0] -> List(0), [test-mysql-jdbc-kafkatable,0] -> List(0), [user-detect-test-user,0] -> List(0), [dbserver1.kafka.user,0] -> List(0), [connect-offsets,0] -> List(0), [__consumer_offsets,12] -> List(0), [modification-device,0] -> List(0), [__consumer_offsets,8] -> List(0), [dbserver1.kafka.Products,0] -> List(0), [test-mysql-timestamp-tmst,0] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,48] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,13] -> List(0), [dbhistory.kafka,0] -> List(0), [test-tt-tmst,0] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,28] -> List(0), [__consumer_offsets,4] -> List(0), [topicA,0] -> List(0), [_schemas,0] -> List(0), [__consumer_offsets,37] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [dbhistory.inventory,0] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [dbserver1.kafka.Ggroup,0] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,27] -> List(0), [__consumer_offsets,45] -> List(0), [dbserver1.kafka.tmst,0] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [connect-configs,0] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test-topic-tmst,0] -> List(0), [test,0] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,9] -> List(0), [dbhistory.debetopic,0] -> List(0), [user-detect-user,0] -> List(0), [__consumer_offsets,1] -> List(0), [dbserver1.kafka.testtable,0] -> List(0), [dbserver1.kafka.device,0] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-29 15:39:53,046] DEBUG [Controller 0]: topics not in preferred replica Map([replicated-topic,0] -> List(1, 0)) (kafka.controller.KafkaController)
[2017-06-29 15:39:53,047] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2017-06-29 15:39:53,047] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-29 15:39:53,047] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-29 15:43:56,090] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children dbserver1.kafka.User,test-mysql-timestamp-tmst,connect-configs,dbhistory.kafka,dbserver1.kafka.Ggroup,test-mysql-tmst-tmst,connect-offsets,test-tmstonly-tmst,modification-device,test-tt-tmst,user-detect-user,dbserver1.kafka.user,test-mysql-jdbc-kafkatable,testforavro,test-topic-tmst,dbserver1.kafka.OTAs,dbhistory.inventory,dbserver1.kafka.Device,test-hjw-tmst,dbserver1.kafka.tmst,dbserver1.kafka.kafkatable,replicated-topic,dbserver1,dbserver1.kafka.testtable,test,_schemas,dbserver1.kafka.device,test-mysql-tmst2-tmst,test-mysql-jdbc-testtable,test-mysql-jdbc-tmst,list,dbserver1.kafka.Products,topicA,modification-user,user-detect-test-user,connect-statuses,dbhistory.debetopic,user-detect2-user,__consumer_offsets,__confluent.support.metrics (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,094] INFO [TopicChangeListener on Controller 0]: New topics: [Set(dbserver1.kafka.OTAs)], deleted topics: [Set()], new partition replica assignment [Map([dbserver1.kafka.OTAs,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,094] INFO [Controller 0]: New topic creation callback for [dbserver1.kafka.OTAs,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,097] INFO [Controller 0]: New partition creation callback for [dbserver1.kafka.OTAs,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,097] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [dbserver1.kafka.OTAs,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,097] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=dbserver1.kafka.OTAs,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,106] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [dbserver1.kafka.OTAs,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,106] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [dbserver1.kafka.OTAs,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,106] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [dbserver1.kafka.OTAs,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:15) (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,165] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=dbserver1.kafka.OTAs,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,166] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to cloud-C:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-06-29 15:43:56,172] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children dbserver1.kafka.User,test-mysql-timestamp-tmst,connect-configs,dbhistory.kafka,dbserver1.kafka.Ggroup,test-mysql-tmst-tmst,connect-offsets,test-tmstonly-tmst,modification-device,test-tt-tmst,user-detect-user,dbserver1.kafka.user,test-mysql-jdbc-kafkatable,testforavro,test-topic-tmst,dbserver1.kafka.OTAs,dbhistory.inventory,dbserver1.kafka.Device,test-hjw-tmst,dbserver1.kafka.tmst,dbserver1.kafka.kafkatable,replicated-topic,dbserver1,dbserver1.kafka.testtable,test,_schemas,dbserver1.kafka.device,test-mysql-tmst2-tmst,test-mysql-jdbc-testtable,test-mysql-jdbc-tmst,list,dbserver1.kafka.Products,dbserver1.kafka.Users,topicA,modification-user,user-detect-test-user,connect-statuses,dbhistory.debetopic,user-detect2-user,__consumer_offsets,__confluent.support.metrics (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,182] INFO [TopicChangeListener on Controller 0]: New topics: [Set(dbserver1.kafka.Users)], deleted topics: [Set()], new partition replica assignment [Map([dbserver1.kafka.Users,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,182] INFO [Controller 0]: New topic creation callback for [dbserver1.kafka.Users,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,189] INFO [Controller 0]: New partition creation callback for [dbserver1.kafka.Users,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,189] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [dbserver1.kafka.Users,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,190] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=dbserver1.kafka.Users,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,197] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [dbserver1.kafka.Users,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,197] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [dbserver1.kafka.Users,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,197] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [dbserver1.kafka.Users,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:15) (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,273] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=dbserver1.kafka.Users,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,281] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children dbserver1.kafka.User,test-mysql-timestamp-tmst,connect-configs,dbhistory.kafka,dbserver1.kafka.Ggroup,test-mysql-tmst-tmst,connect-offsets,test-tmstonly-tmst,modification-device,test-tt-tmst,user-detect-user,dbserver1.kafka.user,test-mysql-jdbc-kafkatable,testforavro,test-topic-tmst,dbserver1.kafka.OTAs,dbhistory.inventory,dbserver1.kafka.Device,test-hjw-tmst,dbserver1.kafka.tmst,dbserver1.kafka.kafkatable,replicated-topic,dbserver1,dbserver1.kafka.testtable,test,_schemas,dbserver1.kafka.User2Devices,dbserver1.kafka.device,test-mysql-tmst2-tmst,test-mysql-jdbc-testtable,test-mysql-jdbc-tmst,list,dbserver1.kafka.Products,dbserver1.kafka.Users,topicA,modification-user,user-detect-test-user,connect-statuses,dbhistory.debetopic,user-detect2-user,__consumer_offsets,__confluent.support.metrics (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,291] INFO [TopicChangeListener on Controller 0]: New topics: [Set(dbserver1.kafka.User2Devices)], deleted topics: [Set()], new partition replica assignment [Map([dbserver1.kafka.User2Devices,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,291] INFO [Controller 0]: New topic creation callback for [dbserver1.kafka.User2Devices,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,291] INFO [Controller 0]: New partition creation callback for [dbserver1.kafka.User2Devices,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,291] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [dbserver1.kafka.User2Devices,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,291] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=dbserver1.kafka.User2Devices,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,292] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [dbserver1.kafka.User2Devices,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,292] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [dbserver1.kafka.User2Devices,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,292] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [dbserver1.kafka.User2Devices,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:15) (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,348] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=dbserver1.kafka.User2Devices,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,355] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children dbserver1.kafka.User,test-mysql-timestamp-tmst,connect-configs,dbhistory.kafka,dbserver1.kafka.Group2Devices,dbserver1.kafka.Ggroup,test-mysql-tmst-tmst,connect-offsets,test-tmstonly-tmst,modification-device,test-tt-tmst,user-detect-user,dbserver1.kafka.user,test-mysql-jdbc-kafkatable,testforavro,test-topic-tmst,dbserver1.kafka.OTAs,dbhistory.inventory,dbserver1.kafka.Device,test-hjw-tmst,dbserver1.kafka.tmst,dbserver1.kafka.kafkatable,replicated-topic,dbserver1,dbserver1.kafka.testtable,test,_schemas,dbserver1.kafka.User2Devices,dbserver1.kafka.device,test-mysql-tmst2-tmst,test-mysql-jdbc-testtable,test-mysql-jdbc-tmst,list,dbserver1.kafka.Products,dbserver1.kafka.Users,topicA,modification-user,user-detect-test-user,connect-statuses,dbhistory.debetopic,user-detect2-user,__consumer_offsets,__confluent.support.metrics (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,364] INFO [TopicChangeListener on Controller 0]: New topics: [Set(dbserver1.kafka.Group2Devices)], deleted topics: [Set()], new partition replica assignment [Map([dbserver1.kafka.Group2Devices,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,364] INFO [Controller 0]: New topic creation callback for [dbserver1.kafka.Group2Devices,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,365] INFO [Controller 0]: New partition creation callback for [dbserver1.kafka.Group2Devices,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,365] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [dbserver1.kafka.Group2Devices,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,365] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=dbserver1.kafka.Group2Devices,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,365] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [dbserver1.kafka.Group2Devices,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,365] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [dbserver1.kafka.Group2Devices,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,365] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [dbserver1.kafka.Group2Devices,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:15) (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,439] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=dbserver1.kafka.Group2Devices,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,448] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children dbserver1.kafka.User,test-mysql-timestamp-tmst,connect-configs,dbhistory.kafka,dbserver1.kafka.Group2Devices,dbserver1.kafka.Ggroup,test-mysql-tmst-tmst,connect-offsets,test-tmstonly-tmst,modification-device,test-tt-tmst,user-detect-user,dbserver1.kafka.user,test-mysql-jdbc-kafkatable,testforavro,test-topic-tmst,dbserver1.kafka.OTAs,dbhistory.inventory,dbserver1.kafka.Devices,dbserver1.kafka.Device,test-hjw-tmst,dbserver1.kafka.tmst,dbserver1.kafka.kafkatable,replicated-topic,dbserver1,dbserver1.kafka.testtable,test,_schemas,dbserver1.kafka.User2Devices,dbserver1.kafka.device,test-mysql-tmst2-tmst,test-mysql-jdbc-testtable,test-mysql-jdbc-tmst,list,dbserver1.kafka.Products,dbserver1.kafka.Users,topicA,modification-user,user-detect-test-user,connect-statuses,dbhistory.debetopic,user-detect2-user,__consumer_offsets,__confluent.support.metrics (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,456] INFO [TopicChangeListener on Controller 0]: New topics: [Set(dbserver1.kafka.Devices)], deleted topics: [Set()], new partition replica assignment [Map([dbserver1.kafka.Devices,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,456] INFO [Controller 0]: New topic creation callback for [dbserver1.kafka.Devices,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,456] INFO [Controller 0]: New partition creation callback for [dbserver1.kafka.Devices,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,457] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [dbserver1.kafka.Devices,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,457] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=dbserver1.kafka.Devices,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,457] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [dbserver1.kafka.Devices,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,457] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [dbserver1.kafka.Devices,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,457] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [dbserver1.kafka.Devices,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:15) (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,514] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=dbserver1.kafka.Devices,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,522] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children dbserver1.kafka.User,test-mysql-timestamp-tmst,connect-configs,dbhistory.kafka,dbserver1.kafka.Group2Devices,dbserver1.kafka.Ggroup,test-mysql-tmst-tmst,connect-offsets,dbserver1.kafka.Groups,test-tmstonly-tmst,modification-device,test-tt-tmst,user-detect-user,dbserver1.kafka.user,test-mysql-jdbc-kafkatable,testforavro,test-topic-tmst,dbserver1.kafka.OTAs,dbhistory.inventory,dbserver1.kafka.Devices,dbserver1.kafka.Device,test-hjw-tmst,dbserver1.kafka.tmst,dbserver1.kafka.kafkatable,replicated-topic,dbserver1,dbserver1.kafka.testtable,test,_schemas,dbserver1.kafka.User2Devices,dbserver1.kafka.device,test-mysql-tmst2-tmst,test-mysql-jdbc-testtable,test-mysql-jdbc-tmst,list,dbserver1.kafka.Products,dbserver1.kafka.Users,topicA,modification-user,user-detect-test-user,connect-statuses,dbhistory.debetopic,user-detect2-user,__consumer_offsets,__confluent.support.metrics (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,524] INFO [TopicChangeListener on Controller 0]: New topics: [Set(dbserver1.kafka.Groups)], deleted topics: [Set()], new partition replica assignment [Map([dbserver1.kafka.Groups,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,524] INFO [Controller 0]: New topic creation callback for [dbserver1.kafka.Groups,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,530] INFO [Controller 0]: New partition creation callback for [dbserver1.kafka.Groups,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,530] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [dbserver1.kafka.Groups,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,531] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=dbserver1.kafka.Groups,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,532] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [dbserver1.kafka.Groups,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,532] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [dbserver1.kafka.Groups,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,532] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [dbserver1.kafka.Groups,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:15) (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,614] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=dbserver1.kafka.Groups,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,623] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children dbserver1.kafka.User,test-mysql-timestamp-tmst,connect-configs,dbhistory.kafka,dbserver1.kafka.Group2Devices,dbserver1.kafka.Ggroup,test-mysql-tmst-tmst,connect-offsets,dbserver1.kafka.Groups,test-tmstonly-tmst,modification-device,test-tt-tmst,user-detect-user,dbserver1.kafka.user,test-mysql-jdbc-kafkatable,testforavro,test-topic-tmst,dbserver1.kafka.OTAs,dbhistory.inventory,dbserver1.kafka.Devices,dbserver1.kafka.Device,test-hjw-tmst,dbserver1.kafka.tmst,dbserver1.kafka.kafkatable,replicated-topic,dbserver1,dbserver1.kafka.testtable,test,_schemas,dbserver1.kafka.User2Devices,dbserver1.kafka.device,test-mysql-tmst2-tmst,test-mysql-jdbc-testtable,test-mysql-jdbc-tmst,list,dbserver1.kafka.Products,dbserver1.kafka.Users,topicA,modification-user,user-detect-test-user,connect-statuses,dbhistory.debetopic,dbserver1.kafka.Product2OTAs,user-detect2-user,__consumer_offsets,__confluent.support.metrics (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,632] INFO [TopicChangeListener on Controller 0]: New topics: [Set(dbserver1.kafka.Product2OTAs)], deleted topics: [Set()], new partition replica assignment [Map([dbserver1.kafka.Product2OTAs,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,632] INFO [Controller 0]: New topic creation callback for [dbserver1.kafka.Product2OTAs,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,633] INFO [Controller 0]: New partition creation callback for [dbserver1.kafka.Product2OTAs,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,633] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [dbserver1.kafka.Product2OTAs,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,633] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=dbserver1.kafka.Product2OTAs,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,634] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [dbserver1.kafka.Product2OTAs,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,634] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [dbserver1.kafka.Product2OTAs,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,634] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [dbserver1.kafka.Product2OTAs,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:15) (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,681] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=dbserver1.kafka.Product2OTAs,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,690] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children dbserver1.kafka.User,test-mysql-timestamp-tmst,connect-configs,dbhistory.kafka,dbserver1.kafka.Group2Devices,dbserver1.kafka.Ggroup,test-mysql-tmst-tmst,connect-offsets,dbserver1.kafka.Groups,test-tmstonly-tmst,modification-device,test-tt-tmst,user-detect-user,dbserver1.kafka.user,test-mysql-jdbc-kafkatable,testforavro,test-topic-tmst,dbserver1.kafka.OTAs,dbhistory.inventory,dbserver1.kafka.Devices,dbserver1.kafka.Device,test-hjw-tmst,dbserver1.kafka.tmst,dbserver1.kafka.kafkatable,replicated-topic,dbserver1,dbserver1.kafka.testtable,test,_schemas,dbserver1.kafka.User2Devices,dbserver1.kafka.device,test-mysql-tmst2-tmst,test-mysql-jdbc-testtable,test-mysql-jdbc-tmst,list,dbserver1.kafka.Products,dbserver1.kafka.Developers,dbserver1.kafka.Users,topicA,modification-user,user-detect-test-user,connect-statuses,dbhistory.debetopic,dbserver1.kafka.Product2OTAs,user-detect2-user,__consumer_offsets,__confluent.support.metrics (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,698] INFO [TopicChangeListener on Controller 0]: New topics: [Set(dbserver1.kafka.Developers)], deleted topics: [Set()], new partition replica assignment [Map([dbserver1.kafka.Developers,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,698] INFO [Controller 0]: New topic creation callback for [dbserver1.kafka.Developers,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,698] INFO [Controller 0]: New partition creation callback for [dbserver1.kafka.Developers,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,698] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [dbserver1.kafka.Developers,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,698] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=dbserver1.kafka.Developers,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,700] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [dbserver1.kafka.Developers,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,701] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [dbserver1.kafka.Developers,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,701] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [dbserver1.kafka.Developers,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:15) (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,739] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=dbserver1.kafka.Developers,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,741] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children dbserver1.kafka.User,test-mysql-timestamp-tmst,connect-configs,dbhistory.kafka,dbserver1.kafka.Group2Devices,dbserver1.kafka.Ggroup,test-mysql-tmst-tmst,connect-offsets,dbserver1.kafka.Groups,test-tmstonly-tmst,modification-device,test-tt-tmst,user-detect-user,dbserver1.kafka.user,test-mysql-jdbc-kafkatable,testforavro,test-topic-tmst,dbserver1.kafka.OTAs,dbhistory.inventory,dbserver1.kafka.Devices,dbserver1.kafka.Device,test-hjw-tmst,dbserver1.kafka.Developer2Pros,dbserver1.kafka.tmst,dbserver1.kafka.kafkatable,replicated-topic,dbserver1,dbserver1.kafka.testtable,test,_schemas,dbserver1.kafka.User2Devices,dbserver1.kafka.device,test-mysql-tmst2-tmst,test-mysql-jdbc-testtable,test-mysql-jdbc-tmst,list,dbserver1.kafka.Products,dbserver1.kafka.Developers,dbserver1.kafka.Users,topicA,modification-user,user-detect-test-user,connect-statuses,dbhistory.debetopic,dbserver1.kafka.Product2OTAs,user-detect2-user,__consumer_offsets,__confluent.support.metrics (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,743] INFO [TopicChangeListener on Controller 0]: New topics: [Set(dbserver1.kafka.Developer2Pros)], deleted topics: [Set()], new partition replica assignment [Map([dbserver1.kafka.Developer2Pros,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-06-29 15:43:56,743] INFO [Controller 0]: New topic creation callback for [dbserver1.kafka.Developer2Pros,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,744] INFO [Controller 0]: New partition creation callback for [dbserver1.kafka.Developer2Pros,0] (kafka.controller.KafkaController)
[2017-06-29 15:43:56,744] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [dbserver1.kafka.Developer2Pros,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,744] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=dbserver1.kafka.Developer2Pros,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:43:56,745] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [dbserver1.kafka.Developer2Pros,0] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,745] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [dbserver1.kafka.Developer2Pros,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,745] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [dbserver1.kafka.Developer2Pros,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:15) (kafka.controller.PartitionStateMachine)
[2017-06-29 15:43:56,780] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=dbserver1.kafka.Developer2Pros,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-06-29 15:44:53,045] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-29 15:44:53,047] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([replicated-topic,0] -> List(1, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__confluent.support.metrics,0] -> List(0), [dbserver1.kafka.kafkatable,0] -> List(0), [__consumer_offsets,30] -> List(0), [dbserver1.kafka.Product2OTAs,0] -> List(0), [dbserver1.kafka.Group2Devices,0] -> List(0), [__consumer_offsets,47] -> List(0), [testforavro,0] -> List(0), [dbserver1.kafka.User2Devices,0] -> List(0), [__consumer_offsets,29] -> List(0), [test-hjw-tmst,0] -> List(0), [test-mysql-tmst2-tmst,0] -> List(0), [__consumer_offsets,41] -> List(0), [dbserver1.kafka.User,0] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [user-detect2-user,0] -> List(0), [__consumer_offsets,14] -> List(0), [test-mysql-jdbc-tmst,0] -> List(0), [__consumer_offsets,40] -> List(0), [modification-user,0] -> List(0), [dbserver1.kafka.Users,0] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [test-tmstonly-tmst,0] -> List(0), [dbserver1,0] -> List(0), [test-mysql-tmst-tmst,0] -> List(0), [__consumer_offsets,20] -> List(0), [list,0] -> List(0), [__consumer_offsets,21] -> List(0), [connect-statuses,0] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,22] -> List(0), [dbserver1.kafka.Device,0] -> List(0), [dbserver1.kafka.Developer2Pros,0] -> List(0), [test-mysql-jdbc-testtable,0] -> List(0), [test-mysql-jdbc-kafkatable,0] -> List(0), [user-detect-test-user,0] -> List(0), [dbserver1.kafka.user,0] -> List(0), [connect-offsets,0] -> List(0), [__consumer_offsets,12] -> List(0), [modification-device,0] -> List(0), [__consumer_offsets,8] -> List(0), [dbserver1.kafka.Products,0] -> List(0), [test-mysql-timestamp-tmst,0] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [dbserver1.kafka.OTAs,0] -> List(0), [__consumer_offsets,13] -> List(0), [dbhistory.kafka,0] -> List(0), [test-tt-tmst,0] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,28] -> List(0), [topicA,0] -> List(0), [_schemas,0] -> List(0), [__consumer_offsets,37] -> List(0), [dbserver1.kafka.Devices,0] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [dbhistory.inventory,0] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [dbserver1.kafka.Ggroup,0] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,27] -> List(0), [dbserver1.kafka.Groups,0] -> List(0), [__consumer_offsets,45] -> List(0), [dbserver1.kafka.tmst,0] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [connect-configs,0] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test-topic-tmst,0] -> List(0), [test,0] -> List(0), [dbserver1.kafka.Developers,0] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,9] -> List(0), [dbhistory.debetopic,0] -> List(0), [__consumer_offsets,1] -> List(0), [user-detect-user,0] -> List(0), [dbserver1.kafka.testtable,0] -> List(0), [dbserver1.kafka.device,0] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-29 15:44:53,047] DEBUG [Controller 0]: topics not in preferred replica Map([replicated-topic,0] -> List(1, 0)) (kafka.controller.KafkaController)
[2017-06-29 15:44:53,047] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2017-06-29 15:44:53,047] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-29 15:44:53,047] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-29 15:49:53,045] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-29 15:49:53,047] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([replicated-topic,0] -> List(1, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__confluent.support.metrics,0] -> List(0), [dbserver1.kafka.kafkatable,0] -> List(0), [__consumer_offsets,30] -> List(0), [dbserver1.kafka.Product2OTAs,0] -> List(0), [dbserver1.kafka.Group2Devices,0] -> List(0), [__consumer_offsets,47] -> List(0), [testforavro,0] -> List(0), [dbserver1.kafka.User2Devices,0] -> List(0), [__consumer_offsets,29] -> List(0), [test-hjw-tmst,0] -> List(0), [test-mysql-tmst2-tmst,0] -> List(0), [__consumer_offsets,41] -> List(0), [dbserver1.kafka.User,0] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [user-detect2-user,0] -> List(0), [__consumer_offsets,14] -> List(0), [test-mysql-jdbc-tmst,0] -> List(0), [__consumer_offsets,40] -> List(0), [modification-user,0] -> List(0), [dbserver1.kafka.Users,0] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [test-tmstonly-tmst,0] -> List(0), [dbserver1,0] -> List(0), [test-mysql-tmst-tmst,0] -> List(0), [__consumer_offsets,20] -> List(0), [list,0] -> List(0), [__consumer_offsets,21] -> List(0), [connect-statuses,0] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,22] -> List(0), [dbserver1.kafka.Device,0] -> List(0), [dbserver1.kafka.Developer2Pros,0] -> List(0), [test-mysql-jdbc-testtable,0] -> List(0), [test-mysql-jdbc-kafkatable,0] -> List(0), [user-detect-test-user,0] -> List(0), [dbserver1.kafka.user,0] -> List(0), [connect-offsets,0] -> List(0), [__consumer_offsets,12] -> List(0), [modification-device,0] -> List(0), [__consumer_offsets,8] -> List(0), [dbserver1.kafka.Products,0] -> List(0), [test-mysql-timestamp-tmst,0] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [dbserver1.kafka.OTAs,0] -> List(0), [__consumer_offsets,13] -> List(0), [dbhistory.kafka,0] -> List(0), [test-tt-tmst,0] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,28] -> List(0), [topicA,0] -> List(0), [_schemas,0] -> List(0), [__consumer_offsets,37] -> List(0), [dbserver1.kafka.Devices,0] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [dbhistory.inventory,0] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [dbserver1.kafka.Ggroup,0] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,27] -> List(0), [dbserver1.kafka.Groups,0] -> List(0), [__consumer_offsets,45] -> List(0), [dbserver1.kafka.tmst,0] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [connect-configs,0] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test-topic-tmst,0] -> List(0), [test,0] -> List(0), [dbserver1.kafka.Developers,0] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,9] -> List(0), [dbhistory.debetopic,0] -> List(0), [__consumer_offsets,1] -> List(0), [user-detect-user,0] -> List(0), [dbserver1.kafka.testtable,0] -> List(0), [dbserver1.kafka.device,0] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-29 15:49:53,047] DEBUG [Controller 0]: topics not in preferred replica Map([replicated-topic,0] -> List(1, 0)) (kafka.controller.KafkaController)
[2017-06-29 15:49:53,047] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2017-06-29 15:49:53,047] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-29 15:49:53,047] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-29 15:54:53,045] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-29 15:54:53,047] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([replicated-topic,0] -> List(1, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__confluent.support.metrics,0] -> List(0), [dbserver1.kafka.kafkatable,0] -> List(0), [__consumer_offsets,30] -> List(0), [dbserver1.kafka.Product2OTAs,0] -> List(0), [dbserver1.kafka.Group2Devices,0] -> List(0), [__consumer_offsets,47] -> List(0), [testforavro,0] -> List(0), [dbserver1.kafka.User2Devices,0] -> List(0), [__consumer_offsets,29] -> List(0), [test-hjw-tmst,0] -> List(0), [test-mysql-tmst2-tmst,0] -> List(0), [__consumer_offsets,41] -> List(0), [dbserver1.kafka.User,0] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [user-detect2-user,0] -> List(0), [__consumer_offsets,14] -> List(0), [test-mysql-jdbc-tmst,0] -> List(0), [__consumer_offsets,40] -> List(0), [modification-user,0] -> List(0), [dbserver1.kafka.Users,0] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [test-tmstonly-tmst,0] -> List(0), [dbserver1,0] -> List(0), [test-mysql-tmst-tmst,0] -> List(0), [__consumer_offsets,20] -> List(0), [list,0] -> List(0), [__consumer_offsets,21] -> List(0), [connect-statuses,0] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,22] -> List(0), [dbserver1.kafka.Device,0] -> List(0), [dbserver1.kafka.Developer2Pros,0] -> List(0), [test-mysql-jdbc-testtable,0] -> List(0), [test-mysql-jdbc-kafkatable,0] -> List(0), [user-detect-test-user,0] -> List(0), [dbserver1.kafka.user,0] -> List(0), [connect-offsets,0] -> List(0), [__consumer_offsets,12] -> List(0), [modification-device,0] -> List(0), [__consumer_offsets,8] -> List(0), [dbserver1.kafka.Products,0] -> List(0), [test-mysql-timestamp-tmst,0] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [dbserver1.kafka.OTAs,0] -> List(0), [__consumer_offsets,13] -> List(0), [dbhistory.kafka,0] -> List(0), [test-tt-tmst,0] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,28] -> List(0), [topicA,0] -> List(0), [_schemas,0] -> List(0), [__consumer_offsets,37] -> List(0), [dbserver1.kafka.Devices,0] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [dbhistory.inventory,0] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [dbserver1.kafka.Ggroup,0] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,27] -> List(0), [dbserver1.kafka.Groups,0] -> List(0), [__consumer_offsets,45] -> List(0), [dbserver1.kafka.tmst,0] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [connect-configs,0] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test-topic-tmst,0] -> List(0), [test,0] -> List(0), [dbserver1.kafka.Developers,0] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,9] -> List(0), [dbhistory.debetopic,0] -> List(0), [__consumer_offsets,1] -> List(0), [user-detect-user,0] -> List(0), [dbserver1.kafka.testtable,0] -> List(0), [dbserver1.kafka.device,0] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-29 15:54:53,047] DEBUG [Controller 0]: topics not in preferred replica Map([replicated-topic,0] -> List(1, 0)) (kafka.controller.KafkaController)
[2017-06-29 15:54:53,047] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2017-06-29 15:54:53,047] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-29 15:54:53,047] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2017-06-29 15:59:53,046] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-06-29 15:59:53,047] DEBUG [Controller 0]: preferred replicas by broker Map(1 -> Map([replicated-topic,0] -> List(1, 0)), 0 -> Map([__consumer_offsets,19] -> List(0), [__confluent.support.metrics,0] -> List(0), [dbserver1.kafka.kafkatable,0] -> List(0), [__consumer_offsets,30] -> List(0), [dbserver1.kafka.Product2OTAs,0] -> List(0), [dbserver1.kafka.Group2Devices,0] -> List(0), [__consumer_offsets,47] -> List(0), [testforavro,0] -> List(0), [dbserver1.kafka.User2Devices,0] -> List(0), [__consumer_offsets,29] -> List(0), [test-hjw-tmst,0] -> List(0), [test-mysql-tmst2-tmst,0] -> List(0), [__consumer_offsets,41] -> List(0), [dbserver1.kafka.User,0] -> List(0), [__consumer_offsets,39] -> List(0), [__consumer_offsets,10] -> List(0), [__consumer_offsets,17] -> List(0), [user-detect2-user,0] -> List(0), [__consumer_offsets,14] -> List(0), [test-mysql-jdbc-tmst,0] -> List(0), [__consumer_offsets,40] -> List(0), [modification-user,0] -> List(0), [dbserver1.kafka.Users,0] -> List(0), [__consumer_offsets,18] -> List(0), [__consumer_offsets,26] -> List(0), [__consumer_offsets,0] -> List(0), [__consumer_offsets,24] -> List(0), [__consumer_offsets,33] -> List(0), [test-tmstonly-tmst,0] -> List(0), [dbserver1,0] -> List(0), [test-mysql-tmst-tmst,0] -> List(0), [__consumer_offsets,20] -> List(0), [list,0] -> List(0), [__consumer_offsets,21] -> List(0), [connect-statuses,0] -> List(0), [__consumer_offsets,3] -> List(0), [__consumer_offsets,5] -> List(0), [__consumer_offsets,22] -> List(0), [dbserver1.kafka.Device,0] -> List(0), [dbserver1.kafka.Developer2Pros,0] -> List(0), [test-mysql-jdbc-testtable,0] -> List(0), [test-mysql-jdbc-kafkatable,0] -> List(0), [user-detect-test-user,0] -> List(0), [dbserver1.kafka.user,0] -> List(0), [connect-offsets,0] -> List(0), [__consumer_offsets,12] -> List(0), [modification-device,0] -> List(0), [__consumer_offsets,8] -> List(0), [dbserver1.kafka.Products,0] -> List(0), [test-mysql-timestamp-tmst,0] -> List(0), [__consumer_offsets,23] -> List(0), [__consumer_offsets,15] -> List(0), [__consumer_offsets,11] -> List(0), [__consumer_offsets,48] -> List(0), [dbserver1.kafka.OTAs,0] -> List(0), [__consumer_offsets,13] -> List(0), [dbhistory.kafka,0] -> List(0), [test-tt-tmst,0] -> List(0), [__consumer_offsets,49] -> List(0), [__consumer_offsets,6] -> List(0), [__consumer_offsets,4] -> List(0), [__consumer_offsets,28] -> List(0), [topicA,0] -> List(0), [_schemas,0] -> List(0), [__consumer_offsets,37] -> List(0), [dbserver1.kafka.Devices,0] -> List(0), [__consumer_offsets,31] -> List(0), [__consumer_offsets,44] -> List(0), [dbhistory.inventory,0] -> List(0), [__consumer_offsets,42] -> List(0), [__consumer_offsets,34] -> List(0), [dbserver1.kafka.Ggroup,0] -> List(0), [__consumer_offsets,46] -> List(0), [__consumer_offsets,25] -> List(0), [__consumer_offsets,27] -> List(0), [dbserver1.kafka.Groups,0] -> List(0), [__consumer_offsets,45] -> List(0), [dbserver1.kafka.tmst,0] -> List(0), [__consumer_offsets,32] -> List(0), [__consumer_offsets,43] -> List(0), [connect-configs,0] -> List(0), [__consumer_offsets,36] -> List(0), [__consumer_offsets,35] -> List(0), [__consumer_offsets,7] -> List(0), [test-topic-tmst,0] -> List(0), [test,0] -> List(0), [dbserver1.kafka.Developers,0] -> List(0), [__consumer_offsets,38] -> List(0), [__consumer_offsets,9] -> List(0), [dbhistory.debetopic,0] -> List(0), [__consumer_offsets,1] -> List(0), [user-detect-user,0] -> List(0), [dbserver1.kafka.testtable,0] -> List(0), [dbserver1.kafka.device,0] -> List(0), [__consumer_offsets,2] -> List(0), [__consumer_offsets,16] -> List(0))) (kafka.controller.KafkaController)
[2017-06-29 15:59:53,047] DEBUG [Controller 0]: topics not in preferred replica Map([replicated-topic,0] -> List(1, 0)) (kafka.controller.KafkaController)
[2017-06-29 15:59:53,047] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2017-06-29 15:59:53,047] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2017-06-29 15:59:53,047] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
